#summary Metadata fields configuration options

= Introduction =
In JANUS there is a distinction between metadata and metadata fileds. Metadata fields are configuration, describing the different types of metadata that can be configured for the entities and metadata is the actual values set for the individual entities.

This document will explain how to  configure metadata fields in the JANUS configuration file.
 
= Options =
The following table document the different options used when configuring a metadata field. Se the example config file, foe examples.

|| *Option* || *Value(s)* || *Description* || *Required* ||
|| [Metadata#type type] || _string_ ('text', 'file', 'select', 'boolean') || Type of metadata || Yes ||
|| [Metadata#filetype filetype] || _string_ || Type of file that are accepted for upload. Syntax `*.jpg`. Multiple can be choosen by seperating the with a `;` || Yes (when type is `file`) ||
|| [Metadata#maxsize maxsize] || _string_ || Max size of files uploaded. Valid units are B, KB, MB, and GB. The default unit is KB. || Yes (when type is `file`) ||
|| [Metadata#select_values select_values] || _array_ || Values in the select box (used for both value and display) || Yes (if type is `select`) ||
|| [Metadata#order order] || _int_ || The sort order || No ||
|| [Metadata#default default] || _string_, _boolean_ || Default value (_string_ when type is `text`, `file`, `select` and _boolean_ when type is `boolean`) || No ||
|| [Metadata#required required] || _boolean_ || Is field required. NOTE that if the `required` field is used with the `supported` field, than all expanded metadata fields are required|| No ||
|| [Metadata#validate validate] || _string_ || Name of function that should validate input. See [metacustomvalidation this page] for more details. || No ||
|| [Metadata#supported supported] || _array_ || Substitute a # char in the field name to produce multible keys, with different index. NOTE that the `required` field SHOULD NOT be used with `supported`|| No ||
|| [Metadata#default_allow default_allow] || _boolean_ || Is the given default values allowed as valid input || No ||

== type ==
|| *Type* || _string_ || 
|| *Allowed value(s)* || `text`, `file`, `select`, `boolean` ||
|| *Required* || Yes ||

== filetype ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || Yes, if type is `file` ||

== maxsize ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || yes, if type is `file` ||

== select_values ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || yes, is type is `select` ||

== order ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

== default ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

== required ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

== validate ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

== supported ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

== default_allow ==
|| *Type* ||  || 
|| *Allowed value(s)* || ||
|| *Required* || No ||

= Examples =
Below is an example of how to define a new metadata field using the most common options.

{{{
'metadatafieldname' => array(
    'type' => 'text',
    'description' => array(
        'en' => 'A new metadata field description',
        'da' => 'En ny beskrivelse',
    ),
    'order' => 130,
    'default' => 'CHANGE ME',
    'default_allowed' => false,
    'required' => false,
),
}}}

An example of the use of supported
{{{
'AssertionConsumerService:#:Location' => array(
    'type' => 'text',
    'description' => array(
        'en' => 'Assertion Consumer Service endpoint',
    ),
    'order' => 140,
    'default' => 'CHANGE ME',
    'supported' => array(0,1,2,3,4),
),
}}}
The above example will give 5 entries for adding AssertionConsumerService endpoints.