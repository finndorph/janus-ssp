#summary Metadata configuration options
`NOTE this document is not complete`

= Introduction =
this document will explain how to  configure metadata fields in the JANUS configuration file.
 
= Options =
The following table document the different options used when configuring a metadata field. Se the example config file, foe examples.

|| *Option* || *Value(s)* || *Description* || *Required* ||
|| type || 'text', 'file', 'select', 'boolean' || Type of metadata || Yes ||
|| description || _array_ (language indexed) || Description of the field. || Yes ||
|| filetype || _string_ || Type of file that are accepted for upload || Yes (when type is file) ||
|| maxsize || _string_ || Max size of files uploaded || Yes (when type is file) ||
|| select_values || _array_ || Values in the select box (used for both value and display) || Yes (if type is select) ||
|| order || _int_ || The sort order || No ||
|| default|| _string_, _boolean_ || Default value (_string_ when type is text, file, select and _boolean_ when type is boolean) || No ||
|| required || _boolean_ || Is field required. NOTE that the `required` field can not be used with the `supported` field|| No ||
|| validate || _string_ || Name of function that should validate input. See [metacustomvalidation this page] for more details. || No ||
|| supported || _array_ || Substitute a # char in the name to produce multible keys, with different index. NOTE that the `required` field can not be used with `supported`|| No ||
|| default_allow || _boolean_ || Is the given default values allowed as valid input || No ||

== Example ==
Below is an example of how to define a new metadata field using the most common options.

{{{
'metadatafieldname' => array(
    'type' => 'text',
    'description' => array(
        'en' => 'A new metadata field description',
        'da' => 'En ny beskrivelse',
    ),
    'order' => 130,
    'default' => 'CHANGE ME',
    'default_allowed' => false,
    'required' => false,
),
}}}

An example of the use of supported
{{{
'AssertionConsumerService:#:Location' => array(
    'type' => 'text',
    'description' => array(
        'en' => 'Assertion Consumer Service endpoint',
    ),
    'order' => 140,
    'default' => 'CHANGE ME',
    'supported' => array(0,1,2,3,4),
),
}}}
The above example will give 5 entries for adding AssertionConsumerService endpoints.