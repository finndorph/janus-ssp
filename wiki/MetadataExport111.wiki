#summary The different ways of exporting metadata in JANUS

= Introduction =
JANUS supplies different ways of exporting metadata. On the entity level and on the federation level.

= Entity metadata export =
In the edit entity view, you can hit the Export tab and click the Export matadata link.

The page will display the metadata of the entity in SimpleSAMLphp flat file format. Links for displaying the metadata in SAML xml format and JSON is located in the buttom of the page.

The page have the following parameters

|| *Parameter* || *Value* || *Required* ||
|| eid || _int_ || Yes ||
|| revisionid || _int_ || Yes ||
|| output || 'xhtml' or not set || No ||

*PLEASE* note that this page is protected, so only authorized users can access this page. This page should not be used for automatically export of metadata

= Federation metadata export =

== Configuration ==

 * mdexport.postprocessor
 * mdexport.feeds
 * mdexport.allowed_mime
 * mdexport.default_options

=== Options ===

The following is a description of all allowed ontions for configuring how export of metadata should behave
|| *Parameter* || *Value* || *Description* ||
|| [MetadataExport111#array__types types] || _array_ || ||
|| states || _array_ || ||
|| mime || _string_ || ||
|| exclude || _array_ || ||
|| postprocessor || _string_ || ||
|| entitiesDescriptorName || _string_ || ||
|| filename || _string_ || ||
|| maxCache || _int_ || ||
|| maxDuration || _int_ ||Â ||
|| sign.enable || _boolean_ || ||
|| sign.privatekey || _string_ || ||
|| sign.privatekey_pass || _string_ || ||
|| sign.certificate || _string_ || ||

----

==== _array_ {{{types}}} ====
|| The connection types to be exported ||
<tr><td>
*Example*
{{{
'types' => array('saml20-sp'. 'shib13-sp'),
}}}
</td></tr>

==== _array_ {{{states}}} ====
|| The connection states to be exported ||
<tr><td>
*Example*
{{{
'states' => array('prod-accepted'. 'qa-accepted'),
}}}
</td></tr>

==== _string_ {{{mime}}} ====
|| Defines the mime type of the exported metadata. Only values defined in `mdexport.allowed_mime` is allowed ||
<tr><td>
*Example*
{{{
'mime' => 'application/xml',
}}}
</td></tr>

==== _array_ {{{exclude}}} ====
|| Array of entityIDs for connections that should be excluded from the metadata export||
<tr><td>
*Example*
{{{
'exclude' => array('https://example.org/saml/metadata.xml'),
}}}
</td></tr>

==== _string_ {{{postprocessor}}} ====
|| Defines which post processor the metadata should be run through ||
<tr><td>
*Example*
{{{
'exclude' => array('https://example.org/saml/metadata.xml'),
}}}
</td></tr>

==== _string_ {{{entitiesDescriptorName}}} ====
|| Defines the title of the generated metadata. The title is put in the `Name` attribute of the containing `EntitiesDescriptor ||
<tr><td>
*Example*
{{{
'entitiesDescriptorName' => 'Sample Federation',
}}}
</td></tr>

==== _string_ {{{filename}}} ====
|| Defines the name of the file that is returned. Setting this option results in the `Content-Disposition: attachment;` header being set with the given filename. ||
<tr><td>
*Example*
{{{
'filename' => 'federation-metadata.xml',
}}}
</td></tr>

==== _int_ {{{maxCache}}} ====
|| Defines the content of the `cacheDuration` attribute on the containing `EntitiesDescriptor` and all subsequent `EntityDescriptor` elements. ||
<tr><td>
*Example*
{{{
'maxCache' => 60*60*24,
}}}
</td></tr>

==== _int_ {{{maxDuration}}} ====
|| Defines the content of the `validUntil` attribute on the containing `EntitiesDescriptor` and all subsequent `EntityDescriptor` elements. ||
<tr><td>
*Example*
{{{
'validUntil' => 60*60*24*7,
}}}
</td></tr>

==== _boolean_ {{{sign.enable}}} ====
|| Enables signing of the exported metadata. ||
<tr><td>
*Example*
{{{
'sign.enable' => TRUE,
}}}
</td></tr>

==== _string_ {{{sign.privatekey}}} ====
|| The name of the file containing the private key used for signing the exported metadata. *NOTE* the file must be placed in the `cert` directory in the hosting simpleSAMLphp installation. ||
<tr><td>
*Example*
{{{
'sign.privatekey' => 'sample_server.pem',
}}}
</td></tr>

==== _string_ {{{sign.privatekey_pass}}} ====
|| the password for unlocking the private key used for signing the exported metadata. Do not set or set to `null` if private key is not protected by a password. ||
<tr><td>
*Example*
{{{
'sign.privatekey_pass'   => 'VERY_SECRET_PASSWORD',
}}}
</td></tr>

==== _string_ {{{sign.certificate}}} ====
|| The name of the file containing the public key used for signing the exported metadata. *NOTE* the file must be placed in the `cert` directory in the hosting simpleSAMLphp installation. ||
<tr><td>
*Example*
{{{
'sign.certificate' => 'sample_server.crt',
}}}
</td></tr>


=== Default options ===

=== Post processors ===
*NOTE* it is up the post processor to out put the metadata after the processing is done.

=== Feeds ===


=== Mime types ===

 * application/xml
 * application/samlmetadata+xml
 * application/simplesamlphp+text

== Dynamic metadata export ==
Export of federation metadata can be done dynamically in JANUS. Go to the Federation tab and hit the Federation export link.

|| *Parameter* || *Value* || *Required* ||
|| md || _void_ || Yes ||
|| type || _array(string)_ || Yes ||
|| state || _string_ || Yes ||
|| mime || _string_ || Yes ||
|| filename || _string_ || No ||
|| exclude || _string_ || No ||
|| postpro || _string_ || No ||
|| ignoreerrors || 'on' || No ||

== Configured metadata export ==


  